module LED(
    input   clk ,
    input   rst ,
    input   [1:0] sw    ,
    output  reg     [3:0] led
    );


reg		[15:0]	counter_gaol;
assign			next_counter_39215 =0  //= (counter_39215 == 16'39215)? 16'd0 : counter_39215 + 16'd1;	//400KHz
reg		[15:0]  counter_39215


parameter       [7:0]	counter_256;
assign			next_counter_256 =0    //= (counter_256 == 8'd255)? 8'd0 : counter_256 + 8'd1;	//400KHz
reg     down=1;


    always@(counter_goal)begin    	
	always@(posedge clk)begin
            
            next_counter_256 = (counter_256 == 8'd255)? 8'd0 : counter_256 + 8'd1;
            next_counter_39215 = (counter_256 == 8'd255)? counter_39215 + 16'd1: ;
	    
	    led = 4'b0001;
            if(down==1){
	    if(counter_39215 == 16'39215){counter_goal=counter_goal - 16'd1;next_counter_39215=8'd0;counter_39215=8'd0;}
	    if(counter_goal==0)down=0;
            }
            if(down==0){
	    if(counter_39215 == 16'39215){counter_goal=counter_goal + 16'd1;next_counter_39215=8'd0;counter_39215=8'd0;}
	    if(counter_goal==16'39215)down=1;
	    }

	    
	end
    end 
    
endmodule